/* eslint-disable prettier/prettier */
/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { GoogleFirestoreAdminV1Index } from './googleFirestoreAdminV1Index';
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import * as helpers from '../helpers';


/**
 * The index configuration for this field.
 */
export class GoogleFirestoreAdminV1IndexConfig {
    /**
     * Output only. Specifies the resource name of the `Field` from which this field's index configuration is set (when `uses_ancestor_config` is true), or from which it *would* be set if this field had no index configuration (when `uses_ancestor_config` is false).
     */
    ancestorField?: string;
    /**
     * The indexes supported for this field.
     */
    indexes?: Array<GoogleFirestoreAdminV1Index>;
    /**
     * Output only When true, the `Field`'s index configuration is in the process of being reverted. Once complete, the index config will transition to the same state as the field specified by `ancestor_field`, at which point `uses_ancestor_config` will be `true` and `reverting` will be `false`.
     */
    reverting?: boolean;
    /**
     * Output only. When true, the `Field`'s index configuration is set from the configuration specified by the `ancestor_field`. When false, the `Field`'s index configuration is defined explicitly.
     */
    usesAncestorConfig?: boolean;


// eslint-disable-next-line @typescript-eslint/no-explicit-any
    constructor(json: any) {
        if (json.ancestorField) {
        this.ancestorField = json.ancestorField; //[Data format: ]
        }
        if (json.indexes) {
        this.indexes = [];
        json.indexes.forEach((element: GoogleFirestoreAdminV1Index) => {
            this.indexes?.push(new GoogleFirestoreAdminV1Index(element));
        });
        }
        if (json.reverting) {
        this.reverting = json.reverting; 
        }
        if (json.usesAncestorConfig) {
        this.usesAncestorConfig = json.usesAncestorConfig; 
        }
  }
}
