/* eslint-disable prettier/prettier */
/**
 * Cloud Firestore API
 * Accesses the NoSQL document database built for automatic scaling, high performance, and ease of application development. 
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { ArrayValue } from './arrayValue';
import { LatLng } from './latLng';
import { MapValue } from './mapValue';
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import * as helpers from '../helpers';


/**
 * A message that can hold any of the supported value types.
 */
export class Value {
    /**
     * An array value. Cannot directly contain another array value, though can contain an map which contains another array.
     */
    arrayValue?: ArrayValue;
    /**
     * A boolean value.
     */
    booleanValue?: boolean;
    /**
     * A bytes value. Must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes are considered by queries.
     */
    bytesValue?: string;
    /**
     * A double value.
     */
    doubleValue?: number;
    /**
     * A geo point value representing a point on the surface of Earth.
     */
    geoPointValue?: LatLng;
    /**
     * An integer value.
     */
    integerValue?: string;
    /**
     * A map value.
     */
    mapValue?: MapValue;
    /**
     * A null value.
     */
    nullValue?: Value.NullValueEnum;
    /**
     * A reference to a document. For example: `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
     */
    referenceValue?: string;
    /**
     * A string value. The string, represented as UTF-8, must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes of the UTF-8 representation are considered by queries.
     */
    stringValue?: string;
    /**
     * A timestamp value. Precise only to microseconds. When stored, any additional precision is rounded down.
     */
    timestampValue?: string;


// eslint-disable-next-line @typescript-eslint/no-explicit-any
    constructor(json: any) {
        if (json.arrayValue) {
        this.arrayValue = new ArrayValue(json.arrayValue);
        }
        if (json.booleanValue) {
        this.booleanValue = json.booleanValue; 
        }
        if (json.bytesValue) {
        this.bytesValue = helpers.stringFromBufferJson(json.bytesValue); //[Data format: byte]
        }
        if (json.doubleValue) {
        this.doubleValue = json.doubleValue; 
        }
        if (json.geoPointValue) {
        this.geoPointValue = new LatLng(json.geoPointValue);
        }
        if (json.integerValue) {
        this.integerValue = json.integerValue; //[Data format: int64]
        }
        if (json.mapValue) {
        this.mapValue = new MapValue(json.mapValue);
        }
        if (json.nullValue) {
        this.nullValue = json.nullValue; //[Data format: ]
        }
        if (json.referenceValue) {
        this.referenceValue = json.referenceValue; //[Data format: ]
        }
        if (json.stringValue) {
        this.stringValue = json.stringValue; //[Data format: ]
        }
        if (json.timestampValue) {
        this.timestampValue = helpers.stringFromTimestampJson(json.timestampValue); //[Data format: google-datetime
        }
  }
}
export namespace Value {
    export type NullValueEnum = 'NULL_VALUE';
    export const NullValueEnum = {
        NULLVALUE: 'NULL_VALUE' as NullValueEnum
    }
}
